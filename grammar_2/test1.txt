19
AE BE D DL E F ES IOS IS NE P PE RE S SL T TY VL WS
32
+ - ∗ / =
< > ( ) {
} := ;  and else 
end ic id if int 
do fc float not or 
\ print prog scan str 
then while
19
P -> [ prog DL SL end ]
DL -> [ D DL | ε ]
D -> [ TY VL ; ]
TY -> [ int | float ]
VL -> [ id VL | id ]
SL -> [ S SL | ε ]
S -> [ ES | IS | WS | IOS ]
ES -> [ id := E ; ]
IS -> [ if BE then SL end | if BE then SL else SL end ]
WS -> [ while BE do SL end ]
IOS -> [ print PE | scan id ]
PE -> [ E | str ]
BE -> [ BE or AE | AE ]
AE -> [ AE and NE | NE ]
NE -> [ not NE | { BE } | RE ]
RE -> [ E = E | E < E | E > E ]
E -> [ E + T | E - T | T ]
T -> [ T ∗ F | T / F | F ]
F -> [ ( E ) | id | ic | fc ]
P

prog
	int i;
	int j;
	int sum;
	int count;
	
	sum:=0;
	count := 5;

	scan count	
	print sum
	
	if count=3
	then sum:=2;
	else
		if count<4
		then sum:=2.3;
		end
		
		while count>2.3
		do sum := sum - 1;
		end
	end
	
	while sum>0
	do
		count := count + 1;
		i := 1.2345;
		
		if count=3
		then sum:=2;
		end
	end

end